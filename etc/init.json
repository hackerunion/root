[
  {
    "id": "fsck",
    "priority": 0,
    "context": "boot",
    "info": "sanity check",
    "process": "/sbin/fsck"
  },

  {
    "id": "lockfs",
    "priority": 1,
    "context": "boot",
    "info": "claim the filesystem",
    "process": "/sbin/lockfs"
  },

  { 
    "id": "creategroups",
    "priority": 2,
    "context": "boot",
    "info": "create all groups",
    "process": "/sbin/creategroups"
  },

  { 
    "id": "createusers",
    "priority": 3,
    "context": "boot",
    "info": "create all users",
    "process": "/sbin/createusers"
  },

  {
    "id": "modusers",
    "priority": 4,
    "context": "boot",
    "info": "add users to groups",
    "process": "/sbin/modusers"
  },

  { 
    "id": "loadmeta",
    "priority": 5,
    "context": "boot",
    "info": "restore filesystem metadata",
    "process": "/sbin/loadmeta"
  },

  {
    "id": "decryptfs",
    "priority": 6,
    "context": "boot",
    "info": "decrypt protected files",
    "process": "/sbin/decryptfs"
  },

  {
    "id": "securefs",
    "priority": 7,
    "context": "boot",
    "info": "apply reasonable permissions",
    "process": "/sbin/securefs"
  },

  {
    "id": "startcron",
    "priority": 8,
    "context": "boot",
    "info": "start the cron daemon",
    "process": "/sbin/startcron"
  },

  {
  # TODO: add list of commands to run after boot, in parallel. useful for installing dependencies without blocking launch
    "id": "rc",
    "priority": 9,
    "context": "boot",
    "info": "run arbitrary user commands",
    "async": true,
    "process": "/sbin/rc"
  },

  { 
    "id": "savemeta",
    "priority": 0,
    "context": "halt",
    "info": "backup filesystem metadata",
    "process": "/sbin/savemeta"
  },

  { 
    "id": "savegroups",
    "priority": 1,
    "context": "halt",
    "info": "save all groups",
    "process": "/sbin/savegroups"
  },

  { 
    "id": "saveusers",
    "priority": 2,
    "context": "halt",
    "info": "save all users",
    "process": "/sbin/saveusers"
  },

  {
    "id": "encryptfs",
    "priority": 3,
    "context": "halt",
    "info": "encrypt protected files",
    "process": "/sbin/encryptfs"
  },

  {
    "id": "releasefs",
    "priority": 4,
    "context": "halt",
    "info": "release the filesystem",
    "process": "/sbin/releasefs"
  }
]
